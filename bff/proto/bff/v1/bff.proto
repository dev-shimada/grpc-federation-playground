syntax = "proto3";

package bff.v1;

import "grpc/federation/federation.proto";
import "user/v1/user.proto";
import "message/v1/message.proto";
option (grpc.federation.file) = {
  import: [
    "user/v1/user.proto",
    "message/v1/message.proto"
  ]
};

option go_package = "github.com/dev-shimada/grpc-federation-playground/bff/gen/bff/v1;bffv1";

service BffService {
  option (grpc.federation.service) = {};
  rpc GetMessage(GetMessageRequest) returns (GetMessageResponse);
}

message GetMessageRequest {
  string message_id = 1;
}
message GetMessageResponse {
  option (.grpc.federation.message) = {
    def: {
      name: "message"
      message: {
        name: "Message"
        args: {
          name: "id"
          by: "$.message_id"
        }
      }
    }
    def: {
      name: "user"
      message: {
        name: "User"
        args: {
          name: "id"
          by: "message.user_id"
        }
      }
    }
  };
  Message message = 1 [(grpc.federation.field).by = "message"];
  User user = 2 [(grpc.federation.field).by = "user"];
}
message Message {
  option (grpc.federation.message) = {
    def: {
      name: "res"
      call: {
        method: "message.v1.MessageService/Get"
        request: {
          field: "id"
          by: "$.id"
        }
      }
      autobind: true
    }
  };
  string user_id = 1;
  string text = 2;
}

message User {
  option (grpc.federation.message) = {
    def: {
      name: "res"
      call: {
        method: "user.v1.UserService/Get"
        request: {
          field: "id"
          by: "$.id"
        }
      }
      autobind: true
    }
  };
  string id = 1;
  string email = 2;
  string name = 3;
  string created_at = 4;
  string updated_at = 5;
}
